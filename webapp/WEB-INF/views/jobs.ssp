<% import org.archive.webservices.ars.model.ArchConf %>
<% import org.archive.webservices.ars.BaseController.staticPath %>
<%@ val user: org.archive.webservices.ars.model.users.ArchUser %>
<%@ val collection: org.archive.webservices.ars.model.ArchCollection %>
<%@ val jobs: Map[org.archive.webservices.ars.model.ArchJobCategory, Seq[org.archive.webservices.ars.processing.DerivationJob]] %>

#set (title)
  <%=collection.name%> Jobs
#end

#set (scripts)
  <script src="<%= staticPath("/js/jquery.min.js") %>"></script>
#end

<subnav data="state.menus.research_services" class="ng-isolate-scope">
  <div class="row subnav">
    <div class="small-12 columns">
      <div class="row">
        <div class="subnav-box columns">
          <div class="left subnav-link ng-scope research_services">
            <span class="ng-scope"><a class="ng-binding ng-scope" href="<%=ArchConf.basePath%>/<%=unescape(collection.userUrlId(user.id))%>/analysis">Job Summary</a></span>
          </div>
          <div class="left subnav-link ng-scope research_services active">
            <span class="ng-scope"><a class="ng-binding ng-scope" href="<%=ArchConf.basePath%>/<%=unescape(collection.userUrlId(user.id))%>/jobs">Generate Datasets</a></span>
          </div>
<!--          <div class="left subnav-link ng-scope research_services"-->
<!--            <span class="ng-scope"><a class="ng-binding ng-scope" href="/ait/<%=unescape(user.urlId)%>/<%=unescape(collection.userUrlId(user.id))%>/sub-collection-builder">Sub-Collection Builder</a></span-->
<!--          </div>-->
          <hr />
        </div>
      </div>
    </div>
  </div>
</subnav>

<div class="row page-tab" id="jobs-tab">
  <div class="large-12 columns">
    <div class="alert alert-secondary alert-dismissible fade show" role="alert">
      <br />
      <p>Example datasets can be quickly generated in order to ensure that the analysis will produce datasets that meet your needs. These datasets use the first 100 relative records from the collection if they are available. We strongly recommend running example jobs on any collections over 100GB.</p>
      <button type="button" class="close" data-dismiss="alert" aria-label="Close" style="background-color: transparent;">
        <span aria-hidden="true">&times;</span>
      </button>
    </div>
    <div class="alert alert-primary alert-dismissible fade" role="alert" id="email-alert">
      <br />
      <p>Your job has been queued. An e-mail will be sent to <%=user.email%> once it is complete.</p>
      <button type="button" class="close" data-dismiss="alert" aria-label="Close" style="background-color: transparent;">
        <span aria-hidden="true">&times;</span>
      </button>
    </div>
    <div class="alert alert-danger alert-dismissible fade" role="alert" id="failed-job">
      <br />
      <p>A dataset generation job has failed, and we are currently investigating it.</p>
      <button type="button" class="close" data-dismiss="alert" aria-label="Close" style="background-color: transparent;">
        <span aria-hidden="true">&times;</span>
      </button>
    </div>
    <%
      import org.archive.webservices.ars.model._
      for (((category, categoryDescription, categoryImage, categoryId), categoryIdx) <- Seq(
          (ArchJobCategories.Collection, "These jobs provide a basic overview of the collection.", "/img/collection.png", "collection"),
          (ArchJobCategories.Network, "These jobs produce files that provide network graphs for analysis, and offer an opportunity to explore the way websites link to each other.", "/img/network.png", "network"),
          (ArchJobCategories.Text, "These jobs produce files that allow the user to explore text components of a web archive, including extracted \"plain text\", named entities, HTML, css, and other web elements.", "/img/text.png", "text"),
          (ArchJobCategories.BinaryInformation, "These jobs produce files that contain information on certain types of binary files found within a web archive.", "/img/file-formats.png", "file-formats")
      ).zipWithIndex) { %>
      <div class="job-category <%=unescape(if (categoryIdx == 0) "expanded" else "collapsed")%>" aria-controls="<%=category%>" aria-expanded="<%=unescape(if (categoryIdx == 0) "true" else "false")%>">
        <div class="category-wrapper">
          <img class="category-image" src="<%=staticPath(categoryImage)%>" alt="Icon for <%=category%>" />
          <h2 id="<%=categoryId%>" class="category-title"><%=category%></h2>
          <p><%=categoryDescription%></p>
        </div>
        <div class="collapsible-content">
          <% for (job <- jobs(category)) { %>
            <div class="card" id="card-<%=unescape(job.id)%>">
              <div class="card-body">
                <h3 class="card-title"><%=job.name%></h3>
                <p class="card-text"><%=job.description%></p>
                <div class="job-card-flex">
                  <div class="job-card-sample">
                    <button class="job-runbutton job-button">Generate Example Dataset</button>
                    <button class="job-statebutton job-button">.</button>
                    <button class="job-resultsbutton job-button" onclick="window.location.href='<%=ArchConf.basePath%>/<%=unescape(collection.userUrlId(user.id))%>/analysis/<%=unescape(job.id)%>?sample=true';" type="button">View Example Dataset</button>
                  </div>
                  <div class="job-card-full">
                    <button class="job-runbutton job-button">Generate Dataset</button>
                    <button class="job-statebutton job-button">.</button>
                    <button class="job-resultsbutton job-button" onclick="window.location.href='<%=ArchConf.basePath%>/<%=unescape(collection.userUrlId(user.id))%>/analysis/<%=unescape(job.id)%>';" type="button">View Dataset</button>
                  </div>
                </div>
              </div>
            </div>
          <% } %>
        </div>
      </div>
    <% } %>
  </div>
</div>

<script>
  $(function() {

    /* Email alert. */
    $("#email-alert").hide()
    $(".job-runbutton.job-button").click(function(){
      $("#email-alert").show()
    })

    /* Failed job alert. */
    $("#failed-job").hide()
    if ($(".job-statebutton.job-button:contains('Failed')").length > 0){
      $("#failed-job").show()
    }

    /* Dismissible info box. */
    $('.alert').alert()

    /* Expandable job categories. */
    $jobCategories = $(".job-category");

    $(".category-wrapper").click(function () {
      $jobCategories.removeClass("expanded");
      $jobCategories.addClass("collapsed");
      var $thisCategory = $(this).parent(".job-category");
      window.location.hash = $(this)[0].getElementsByTagName("h2")[0].id;
      $thisCategory.removeClass("collapsed");
      $thisCategory.addClass("expanded");
      $("html").animate({ scrollTop: parseInt($thisCategory.offset().top) - 100}, 200);
    });

    /* Expand job category for uri fragments. */
    var uri = new URI();
    if (uri.fragment()) {
      $jobCategories.removeClass("expanded");
      $jobCategories.addClass("collapsed");
      var $thisCategory = $(this.getElementById(uri.fragment())).parent(".category-wrapper").parent(".job-category");
      $thisCategory.removeClass("collapsed");
      $thisCategory.addClass("expanded");
      $("html").animate({ scrollTop: parseInt($thisCategory.offset().top) - 100}, 200);
    }

    /* Add permanent link for job category headers. */
    $('h2').each(function() {
    var jobHeader = $(this).attr('id');
    if (jobHeader) {
      $(this).append($('<a/>', {
        href: window.location.href.split('#')[0] + '#' + $(this).attr('id'),
        text: ' #'
      }));
    }
    });

    arch.refreshJobCards("<%=unescape(collection.id)%>");
  });
</script>
