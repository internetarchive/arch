<%@ val user: org.archive.webservices.ars.ait.AitUser %>
<%@ val collection: org.archive.webservices.ars.model.ArsCloudCollection %>
<%@ val job: org.archive.webservices.ars.processing.DerivationJobInstance %>
<%@ val files: Seq[org.archive.webservices.ars.model.DerivativeOutput] %>
<%@ val resultSize: Long %>
<%@ val mimeCount: Seq[(String, Int)] %>

<% layout("/layouts/job.ssp") { %>

  <% if (mimeCount.size > 0) { %>
    <div class="row">
      <div class="large-12 columns">
        <div class="charts">
          <h1>File Format Distribution</h1>
            <p>
              <div class="chartjs-wrapper">
                <canvas id="chartjs-1" class="chartjs" width="undefined" height="undefined"></canvas>
                <script>
                  new Chart(document.getElementById("chartjs-1"),
                      {
                        "type":"doughnut",
                        "data":{
                            "labels":[<%=unescape(mimeCount.map("\"" + _._1 + "\"").mkString(",")) %>],
                            "datasets":[{
                                "label": "",
                                "data":[<%=mimeCount.map(_._2).mkString(",") %>],
                                "fill":false,
                                "backgroundColor":['#003f5c', '#ae5d80', '#ffa600', '#ff6b95', '#93003a']
                            }]},
                      }
                  );
                </script>
              </div>
            </p>
            <div class="text-right">
              <a id="button" aria-describedby="tooltip">What does this graph show?</a>
              <div id="tooltip" role="tooltip">
                This graph shows the distribution of the various file formats in the web archive collection.
                <div id="arrow" data-popper-arrow></div>
              </div>
            </div>
            <script>
              const button = document.querySelector('#button');
              const tooltip = document.querySelector('#tooltip');

              const popperInstance = Popper.createPopper(button, tooltip, {
                modifiers: [
                  {
                    name: 'offset',
                    options: {
                      offset: [20, 20],
                    },
                  },
                ],
              });

              function show() {
                // Make the tooltip visible
                tooltip.setAttribute('data-show', '');

                // Enable the event listeners
                popperInstance.setOptions({
                  modifiers: [{ name: 'eventListeners', enabled: true }],
                });

                // Update its position
                popperInstance.update();
              }

              function hide() {
                // Hide the tooltip
                tooltip.removeAttribute('data-show');

                // Disable the event listeners
                popperInstance.setOptions({
                  modifiers: [{ name: 'eventListeners', enabled: false }],
                });
              }

              const showEvents = ['mouseenter', 'focus'];
              const hideEvents = ['mouseleave', 'blur'];

              showEvents.forEach(event => {
                button.addEventListener(event, show);
              });

              hideEvents.forEach(event => {
                button.addEventListener(event, hide);
              });
            </script>
          </div>
        </div>
      </div>
    </div>
  <% } %>
<% } %>
