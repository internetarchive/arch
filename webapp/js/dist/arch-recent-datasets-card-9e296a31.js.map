{"version":3,"file":"arch-recent-datasets-card-9e296a31.js","sources":["../../../src/src/archRecentDatasetsCard/src/styles.ts","../../../src/src/archRecentDatasetsCard/src/arch-recent-datasets-card.ts"],"sourcesContent":["import { css } from \"lit\";\n\nimport { global, cardTable } from \"../../lib/styles\";\n\nexport default [\n  global,\n  cardTable,\n  css`\n    thead > tr.hidden-header {\n      color: transparent;\n    }\n\n    th.date {\n      width: 8rem;\n      text-align: right;\n    }\n\n    td.name,\n    td.collection {\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      overflow-x: hidden;\n    }\n\n    td.date {\n      text-align: right;\n    }\n  `,\n];\n","import { LitElement, html } from \"lit\";\nimport { customElement, state } from \"lit/decorators.js\";\n\nimport { Paths } from \"../../lib/helpers\";\nimport { Dataset } from \"../../lib/types\";\nimport { isoStringToDateString } from \"../../lib/webservices/src/lib/helpers\";\n\nimport \"../../archCard/index\";\nimport \"../../archLoadingIndicator/index\";\n\nimport styles from \"./styles\";\n\n@customElement(\"arch-recent-datasets-card\")\nexport class ArchRecentDatasetsCard extends LitElement {\n  @state() datasets: undefined | Array<Dataset> = undefined;\n\n  static numDisplayedDatasets = 10;\n  static styles = styles;\n\n  constructor() {\n    super();\n    void this.initDatasets();\n  }\n\n  render() {\n    const { numDisplayedDatasets } = ArchRecentDatasetsCard;\n    const isLoading = this.datasets === undefined;\n    // Note that the value of hasDatasets is only valid when isLoading=false;\n    const hasDatasets = (this.datasets ?? []).length > 0;\n    const datasets = this.datasets ?? [];\n\n    const getRows = () =>\n      isLoading\n        ? [\n            html`<tr>\n              <td colspan=\"3\">\n                <arch-loading-indicator></arch-loading-indicator>\n              </td>\n            </tr>`,\n          ]\n        : !hasDatasets\n        ? [\n            html`<tr>\n              <td colspan=\"3\"><i>New datasets will be listed here.</i></td>\n            </tr>`,\n          ]\n        : datasets.slice(0, numDisplayedDatasets).map((dataset) => {\n            const name = `${dataset.name}${\n              dataset.sample !== -1 ? \" (Sample)\" : \"\"\n            }`;\n            return html`\n              <tr>\n                <td class=\"name\">\n                  <a\n                    href=\"${Paths.dataset(dataset.id, dataset.sample)}\"\n                    title=\"${name}\"\n                  >\n                    ${name}\n                  </a>\n                </td>\n                <td class=\"collection\" title=\"${dataset.collectionName}\">\n                  ${dataset.collectionName}\n                </td>\n                <td class=\"date\">\n                  ${isoStringToDateString(dataset.finishedTime as Date)}\n                </td>\n              </tr>\n            `;\n          });\n\n    return html`\n      <arch-card\n        title=\"Recent Datasets\"\n        ctatext=\"Generate New Dataset\"\n        ctahref=\"/datasets/generate\"\n      >\n        <div slot=\"content\">\n          <table>\n            <thead>\n              <tr class=\"${isLoading || !hasDatasets ? \"hidden-header\" : \"\"}\">\n                <th class=\"name\">Dataset</th>\n                <th class=\"collection\">Collection Name</th>\n                <th class=\"date\">Date Generated</th>\n              </tr>\n            </thead>\n            <tbody>\n              ${getRows()}\n            </tbody>\n          </table>\n        </div>\n        <div slot=\"footer\">\n          ${isLoading || !hasDatasets\n            ? html``\n            : html`\n                <a href=\"/datasets/explore\" class=\"view-all\">\n                  View\n                  ${datasets.length > numDisplayedDatasets\n                    ? html`All ${datasets.length}`\n                    : html``}\n                  Datasets\n                </a>\n              `}\n        </div>\n      </arch-card>\n    `;\n  }\n\n  private async initDatasets() {\n    this.datasets = (await (\n      await fetch(\"/api/datasets?state=Finished\")\n    ).json()) as Array<Dataset>;\n  }\n}\n\n// Injects the tag into the global name space\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"arch-recent-datasets-card\": ArchRecentDatasetsCard;\n  }\n}\n"],"names":["styles","global","cardTable","css","ArchRecentDatasetsCard","ArchRecentDatasetsCard_1","LitElement","constructor","super","this","datasets","undefined","initDatasets","render","numDisplayedDatasets","isLoading","hasDatasets","_a","length","_b","html","slice","map","dataset","name","sample","Paths","id","collectionName","isoStringToDateString","finishedTime","async","fetch","json","__decorate","state","prototype","customElement"],"mappings":"0cAIA,MAAeA,EAAA,CACbC,EACAC,EACAC,CAAG;;;;;;;;;;;;;;;;;;;;KCME,IAAMC,EAAsBC,EAA5B,cAAqCC,EAM1CC,cACEC,QANOC,KAAQC,cAA+BC,EAOzCF,KAAKG,cACX,CAEDC,iBACE,MAAMC,qBAAEA,GAAyBT,EAC3BU,OAA8BJ,IAAlBF,KAAKC,SAEjBM,GAAgC,QAAjBC,EAAAR,KAAKC,gBAAY,IAAAO,EAAAA,EAAA,IAAIC,OAAS,EAC7CR,EAAwB,QAAbS,EAAAV,KAAKC,gBAAQ,IAAAS,EAAAA,EAAI,GAyClC,OAAOC,CAAI;;;;;;;;;2BASYL,IAAcC,EAAc,gBAAkB;;;;;;;gBA/CnED,EACI,CACEK,CAAI;;;;oBAMLJ,EAMDN,EAASW,MAAM,EAAGP,GAAsBQ,KAAKC,IAC3C,MAAMC,EAAO,GAAGD,EAAQC,QACF,IAApBD,EAAQE,OAAgB,YAAc,KAExC,OAAOL,CAAI;;;;4BAIKM,EAAMH,QAAQA,EAAQI,GAAIJ,EAAQE;6BACjCD;;sBAEPA;;;gDAG0BD,EAAQK;oBACpCL,EAAQK;;;oBAGRC,EAAsBN,EAAQO;;;aAGrC,IA1BH,CACEV,CAAI;;;;;;;YAiDJL,IAAcC,EACZI,CAAI,GACJA,CAAI;;;oBAGEV,EAASQ,OAASJ,EAChBM,CAAI,OAAOV,EAASQ,SACpBE,CAAI;;;;;;KAOvB,CAEOW,qBACNtB,KAAKC,qBACGsB,MAAM,iCACZC,MACH,GA/FM7B,EAAoBU,qBAAG,GACvBV,EAAMJ,OAAGA,EAHPkC,EAAA,CAARC,KAAyD/B,EAAAgC,UAAA,gBAAA,GAD/ChC,EAAsBC,EAAA6B,EAAA,CADlCG,EAAc,8BACFjC"}