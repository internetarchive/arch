{"version":3,"file":"chunk-types-df9f20ed.js","sources":["../../src/node_modules/@lit/reactive-element/decorators/query-all.js","../../../src/src/lib/types.ts"],"sourcesContent":["import{decorateProperty as r}from\"./base.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */function e(e){return r({descriptor:r=>({get(){var r,o;return null!==(o=null===(r=this.renderRoot)||void 0===r?void 0:r.querySelectorAll(e))&&void 0!==o?o:[]},enumerable:!0,configurable:!0})})}export{e as queryAll};\n//# sourceMappingURL=query-all.js.map\n","import { JSONSchemaType } from \"ajv\";\n\nexport type Collection = {\n  id: string;\n  name: string;\n  public: boolean;\n  lastJobId?: string;\n  lastJobSample?: boolean;\n  lastJobTime?: Date;\n  size: string;\n  sortSize: number;\n  seeds: number;\n  lastCrawlDate: Date;\n};\n\nexport type Dataset = {\n  category: string;\n  collectionId: string;\n  collectionName: string;\n  finishedTime?: Date;\n  id: string;\n  isSample: boolean;\n  jobId: string;\n  name: string;\n  numFiles: number;\n  sample: number; // -1 (not sample) or > 0 (sample)\n  startTime?: Date;\n  state: string;\n};\n\nexport enum JobId {\n  ArsLgaGeneration = \"ArsLgaGeneration\",\n  ArsWaneGeneration = \"ArsWaneGeneration\",\n  ArsWatGeneration = \"ArsWatGeneration\",\n  AudioInformationExtraction = \"AudioInformationExtraction\",\n  DomainFrequencyExtraction = \"DomainFrequencyExtraction\",\n  DomainGraphExtraction = \"DomainGraphExtraction\",\n  ImageGraphExtraction = \"ImageGraphExtraction\",\n  ImageInformationExtraction = \"ImageInformationExtraction\",\n  PdfInformationExtraction = \"PdfInformationExtraction\",\n  PresentationProgramInformationExtraction = \"PresentationProgramInformationExtraction\",\n  SpreadsheetInformationExtraction = \"SpreadsheetInformationExtraction\",\n  TextFilesInformationExtraction = \"TextFilesInformationExtraction\",\n  VideoInformationExtraction = \"VideoInformationExtraction\",\n  WebGraphExtraction = \"WebGraphExtraction\",\n  WebPagesExtraction = \"WebPagesExtraction\",\n  WordProcessorInformationExtraction = \"WordProcessorInformationExtraction\",\n}\n\nexport type Job = {\n  id: JobId;\n  name: string;\n  description: string;\n};\n\nexport type AvailableJobs = Array<{\n  categoryName: string;\n  categoryDescription: string;\n  categoryImage: string;\n  categoryId: string;\n  jobs: Array<Job>;\n}>;\n\nexport enum ProcessingState {\n  NotStarted = \"Not started\",\n  Queued = \"Queued\",\n  Running = \"Running\",\n  Finished = \"Finished\",\n  Failed = \"Failed\",\n}\n\nexport type JobState = {\n  id: string;\n  name: string;\n  sample: number;\n  state: ProcessingState;\n  started: boolean;\n  finished: boolean;\n  failed: boolean;\n  activeStage: string;\n  activeState: ProcessingState;\n  startTime?: string;\n  finishedTime?: string;\n};\n\nexport type PublishedDatasetInfo = {\n  item: string;\n  source: string;\n  collection: string;\n  job: JobId;\n  complete: boolean;\n  sample: boolean;\n  time: Date;\n  ark: string;\n};\n\n// Metadata keys will be displayed in the order define here.\nexport enum PublishedDatasetMetadataKeys {\n  title = \"title\",\n  description = \"description\",\n  creator = \"creator\",\n  subject = \"subject\",\n  licenseurl = \"licenseurl\",\n}\n\nexport type PublishedDatasetMetadataValue = string | Array<string>;\n\nexport type PublishedDatasetMetadata = Partial<\n  Record<PublishedDatasetMetadataKeys, PublishedDatasetMetadataValue>\n>;\n\nexport type PublishedDatasetMetadataJSONSchema = JSONSchemaType<{\n  creator?: PublishedDatasetMetadataValue;\n  description?: PublishedDatasetMetadataValue;\n  licenseurl?: PublishedDatasetMetadataValue;\n  subject?: PublishedDatasetMetadataValue;\n  title?: PublishedDatasetMetadataValue;\n}>;\n"],"names":["e","r","descriptor","get","o","this","renderRoot","querySelectorAll","enumerable","configurable","JobId","ProcessingState","PublishedDatasetMetadataKeys"],"mappings":";;;;;GAKG,SAASA,EAAEA,GAAG,OAAOC,EAAE,CAACC,WAAWD,IAAC,CAAIE,MAAM,IAAIF,EAAEG,EAAE,OAAO,QAAQA,EAAE,QAAQH,EAAEI,KAAKC,kBAAa,IAASL,OAAE,EAAOA,EAAEM,iBAAiBP,UAAK,IAASI,EAAEA,EAAE,EAAE,EAAEI,YAAW,EAAGC,cAAa,KAAM,CCyBlM,IAAYC,EAiCAC,EAkCAC,GAnEZ,SAAYF,GACVA,EAAA,iBAAA,mBACAA,EAAA,kBAAA,oBACAA,EAAA,iBAAA,mBACAA,EAAA,2BAAA,6BACAA,EAAA,0BAAA,4BACAA,EAAA,sBAAA,wBACAA,EAAA,qBAAA,uBACAA,EAAA,2BAAA,6BACAA,EAAA,yBAAA,2BACAA,EAAA,yCAAA,2CACAA,EAAA,iCAAA,mCACAA,EAAA,+BAAA,iCACAA,EAAA,2BAAA,6BACAA,EAAA,mBAAA,qBACAA,EAAA,mBAAA,qBACAA,EAAA,mCAAA,oCACD,CAjBD,CAAYA,IAAAA,EAiBX,CAAA,IAgBD,SAAYC,GACVA,EAAA,WAAA,cACAA,EAAA,OAAA,SACAA,EAAA,QAAA,UACAA,EAAA,SAAA,WACAA,EAAA,OAAA,QACD,CAND,CAAYA,IAAAA,EAMX,CAAA,IA4BD,SAAYC,GACVA,EAAA,MAAA,QACAA,EAAA,YAAA,cACAA,EAAA,QAAA,UACAA,EAAA,QAAA,UACAA,EAAA,WAAA,YACD,CAND,CAAYA,IAAAA,EAMX,CAAA"}